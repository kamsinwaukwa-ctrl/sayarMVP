---
globs: back/**
alwaysApply: false
---

# FastAPI + Supabase - Service Architecture

This project follows a service-oriented architecture pattern with FastAPI and Supabase.

## Folder Structure

### `src/` - Source Code

#### Core Components

- **api/** - FastAPI route handlers

  - **auth.py** - Authentication endpoints
  - **merchants.py** - Merchant management endpoints
  - **products.py** - Product management endpoints
  - **orders.py** - Order management endpoints
  - **webhooks.py** - Webhook endpoints (WhatsApp, Paystack, Korapay)

- **models/** - Database and API models

  - **merchant.py** - Merchant SQLAlchemy model
  - **product.py** - Product SQLAlchemy model
  - **order.py** - Order SQLAlchemy model
  - **user.py** - User SQLAlchemy model
  - **api.py** - Pydantic models for API requests/responses
  - **common.py** - Shared types and enums

- **services/** - Business logic

  - **auth_service.py** - Authentication business logic
  - **merchant_service.py** - Merchant operations
  - **product_service.py** - Product management
  - **order_service.py** - Order processing
  - **payment_service.py** - Payment processing

- **integrations/** - External API integrations

  - **whatsapp.py** - WhatsApp Cloud API integration
  - **paystack.py** - Paystack payment integration
  - **korapay.py** - Korapay payment integration
  - **meta_catalog.py** - Meta Catalog API integration

- **database/** - Database configuration

  - **connection.py** - SQLAlchemy database connection
  - **migrations/** - Database migration files

- **workers/** - Background job processing

  - **outbox_worker.py** - APScheduler worker for outbox events
  - **reservation_worker.py** - Inventory reservation cleanup

- **utils/** - Utility functions

  - **auth.py** - JWT authentication helpers
  - **cors.py** - CORS handling
  - **logger.py** - Structured logging
  - **validators.py** - Data validation utilities

- **exceptions/** - Custom exceptions
  - **CustomError.py** - Project-specific error classes

### `tests/` - Test Suite

- **integration/** - End-to-end API tests
- **unit/** - Component tests
- **util/** - Test utilities and fixtures

### `migrations/` - Database Migrations

- **001_initial_schema.sql** - Initial database schema
- **002_add_indexes.sql** - Database indexes
- **003_add_rls_policies.sql** - Row Level Security policies
